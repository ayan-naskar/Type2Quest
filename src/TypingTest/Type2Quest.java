/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TypingTest;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.sql.Timestamp;

/**
 *
 * @author ayann
 */
public class Type2Quest extends javax.swing.JFrame {

    /**
     * Creates new form Type2Quest
     */
    String wordTyped="";
    String userStory="";
    String story="After flying a long distance, a thirsty crow wandered the forest searching for water. Finally, he saw a pot half-filled with water. He tried to drink from it, but his beak wasnâ€™t long enough to reach the water inside. He then saw pebbles on the ground, and one by one, he put them in the pot until the water rose to the brim. The crow then hastily drank from it and quenched his thirst.";
    String chstory[]=story.split(" ");
    int correctWordsTyped=0, ind=0, wdlength=7, curst=0;
    boolean sessionStarted=false;
    String userName, name;
    Menu menuOb;
    
    long startTime, endTime;
    Timer timer;
    int elapsedTime = 0, maxTime=15, etm=0;
    
    
    public Type2Quest() {
        initComponents();
    }
    
    public Type2Quest(String userName, String name, Menu menuOb) {
        this.userName=userName;
        this.name=name;
        this.menuOb=menuOb;
        initComponents();
        helloName.setText("Hello "+name+"!!");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        ProgressBar = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        StoryText = new javax.swing.JLabel();
        TypingSection = new javax.swing.JTextField();
        StartStopButton = new javax.swing.JButton();
        Clock = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        helloName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));

        Title.setFont(new java.awt.Font("Script MT Bold", 0, 54)); // NOI18N
        Title.setText("Type to Quest");

        ProgressBar.setForeground(new java.awt.Color(51, 255, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        StoryText.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        StoryText.setText("Click start to begin...");
        StoryText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                StoryTextKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                StoryTextKeyTyped(evt);
            }
        });

        TypingSection.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TypingSection.setText("Start writing here...");
        TypingSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypingSectionActionPerformed(evt);
            }
        });
        TypingSection.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TypingSectionKeyTyped(evt);
            }
        });

        StartStopButton.setBackground(new java.awt.Color(0, 102, 102));
        StartStopButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        StartStopButton.setText("Start");
        StartStopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartStopButtonActionPerformed(evt);
            }
        });

        Clock.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Clock.setText("00");

        jButton1.setText("Menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        helloName.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(StoryText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(TypingSection, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                .addGap(108, 108, 108))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StartStopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(helloName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Clock, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Clock)
                    .addComponent(jButton1)
                    .addComponent(helloName))
                .addGap(18, 18, 18)
                .addComponent(StoryText, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addGap(40, 40, 40)
                .addComponent(TypingSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(StartStopButton)
                .addContainerGap())
        );

        StoryText.setHorizontalAlignment(0);
        Clock.setHorizontalAlignment(0);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProgressBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Title.setHorizontalAlignment(0);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void setDefaultValues() {
        wordTyped="";
        userStory="";
        correctWordsTyped=0; ind=0; curst=0;
        sessionStarted=false;
        StartStopButton.setText("Start");
        Clock.setText("0");
        startTime=endTime=0;
        elapsedTime=etm=0;
        TypingSection.setText("");
    }
    
    private void timerwatch() {
        timer = new Timer(10, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                etm++;
                if(etm%100==0){
                    elapsedTime++;
                    Clock.setText(""+(maxTime-elapsedTime));
                }                
                
                ProgressBar.setValue((int)(1.0*etm/maxTime));

                if (elapsedTime >= maxTime) {
                    timer.stop();
                    StartStopButton.doClick();
                }
            }
        });
        timer.start();
    }
    
    private void StartStopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartStopButtonActionPerformed
        // TODO add your handling code here:
        if(!sessionStarted){
            StartStopButton.setText("Stop");
            Clock.setText(""+maxTime);
            TypingSection.setText("");
            TypingSection.requestFocus();
            sessionStarted=true;
            updateText();
            startTime=System.currentTimeMillis();
            timerwatch();
        }else{
//            JOptionPane.showMessageDialog(this, "You wrote: "+userStory+"\nAccuracy: "+((double)correctWordsTyped/ind)+"%");
            endTime=System.currentTimeMillis();
            double time=(endTime-startTime)/60000.0;
            int wpm=(int)Math.round(correctWordsTyped/time), acc=(int)Math.round(100.0*correctWordsTyped/(ind+1));
            timer.stop();
            JOptionPane.showMessageDialog(this, "Accuracy: "+acc+"%\nSpeed is: "+wpm+" WPM");
            
            if(wpm!=0) updateScoreboard(wpm, acc);
            
            setDefaultValues();
            updateText();
        }
    }//GEN-LAST:event_StartStopButtonActionPerformed

    private void StoryTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StoryTextKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_StoryTextKeyTyped

    private void StoryTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StoryTextKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_StoryTextKeyPressed

    private void TypingSectionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TypingSectionKeyTyped
        // TODO add your handling code here:
        char typedChar = evt.getKeyChar();
        if(!sessionStarted) StartStopButton.doClick();

        if(typedChar==' ') {
            wordTyped=TypingSection.getText();
            if(wordTyped.trim().equals("")) {
                TypingSection.setText("");
                return;
            }
            
            TypingSection.setText("");
            if(wordTyped.trim().equals(chstory[ind])) {
                correctWordsTyped++;
            }
            userStory+=wordTyped;
            updateText();
            
            ind++;
            if(ind>=chstory.length){
                StartStopButton.doClick();
            }
            wordTyped="";
            if(ind%wdlength==0) {
                userStory="";
                curst+=wdlength;
                updateText();
            }
        }
        
    }//GEN-LAST:event_TypingSectionKeyTyped

    private void TypingSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypingSectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TypingSectionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        menuOb.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void updateText() {
        String s="";
        String us[]=userStory.trim().split(" ");
        if(us.length==1 && us[0].equals("")) us=new String[0];
        
        for(int j=curst, k=0; j<curst+wdlength; j++, k++) {
            int i=0;
            if(k>=us.length) {
                s+=chstory[j]+" ";
                continue;
            }
            for(;i<us[k].length();i++) {
                if(i>=chstory[j].length() || us[k].charAt(i)!=chstory[j].charAt(i)) {
                    s+="<font color='red'>"+us[k].charAt(i)+"</font>";
                }else{
                    s+="<font color='gray'>"+us[k].charAt(i)+"</font>";
                }
            }
            s+=" ";
        }
        s="<html>"+s+"</html>";
       
        StoryText.setText(s);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Type2Quest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Type2Quest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Type2Quest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Type2Quest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Type2Quest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Clock;
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JButton StartStopButton;
    private javax.swing.JLabel StoryText;
    private javax.swing.JLabel Title;
    private javax.swing.JTextField TypingSection;
    private javax.swing.JLabel helloName;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private void updateScoreboard(int speed, int accuracy) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost/Type2Quest","root","ayan123");
            PreparedStatement insert = con1.prepareStatement("insert into scoreboard(username,speed,accuracy,date_time)values(?,?,?,?)");
            insert.setString(1, userName);
            insert.setInt(2, speed);
            insert.setInt(3, accuracy);
            insert.setTimestamp(4, new Timestamp(new Date().getTime()));
            insert.executeUpdate();            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Type2Quest.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Type2Quest.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
